<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Academic</title>
    <link>https://example.com/tag/academic/</link>
      <atom:link href="https://example.com/tag/academic/index.xml" rel="self" type="application/rss+xml" />
    <description>Academic</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 06 Apr 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Academic</title>
      <link>https://example.com/tag/academic/</link>
    </image>
    
    <item>
      <title>Язык разметки Markdown</title>
      <link>https://example.com/post/markdown/</link>
      <pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/markdown/</guid>
      <description>&lt;h2 id=&#34;что-такое-markdown&#34;&gt;Что такое Markdown&lt;/h2&gt;
&lt;p&gt;Markdown — язык текстовой разметки, созданный писателем и блогером Джоном Грубером. Он предназначен для создания красиво оформленных текстов в обычных файлах формата TXT. Вам не нужны громоздкие процессоры вроде Word или Pages, чтобы создавать документы с жирным или курсивным начертанием, цитатами, ссылками и даже таблицами. Достаточно запомнить простые правила Markdown, и можно писать хоть в «Блокноте». Хотя специализированные Markdown-редакторы, конечно, намного удобнее.&lt;/p&gt;
&lt;p&gt;Этот язык разметки используется блогерами, писателями, редакторами и журналистами по всему миру. Всем, кто так или иначе связан с упомянутыми профессиями, будет полезно знать о нём.&lt;/p&gt;
&lt;h2 id=&#34;где-можно-использовать-markdown&#34;&gt;Где можно использовать Markdown&lt;/h2&gt;
&lt;h3 id=&#34;заметки&#34;&gt;Заметки&lt;/h3&gt;
&lt;p&gt;Редактор Markdown с файловой панелью (например, Atom или iA Writer) — это вполне достойная альтернатива Evernote и OneNote.&lt;/p&gt;
&lt;h3 id=&#34;черновики-для-блога&#34;&gt;Черновики для блога&lt;/h3&gt;
&lt;p&gt;Этот язык разметки совместим с кучей онлайн-редакторов и блог-платформ. Можно написать черновик для своего блога в Markdown, а потом опубликовать его за секунды — все ссылки, заголовки и форматирование будут выглядеть так, как вы и задумывали.&lt;/p&gt;
&lt;h3 id=&#34;мессенджеры&#34;&gt;Мессенджеры&lt;/h3&gt;
&lt;p&gt;Даже некоторые мессенджеры поддерживают Markdown. Например, в Telegram вы с его помощью можете применить жирное или курсивное выделение.&lt;/p&gt;
&lt;h2 id=&#34;преимущества-markdown&#34;&gt;Преимущества Markdown&lt;/h2&gt;
&lt;h3 id=&#34;универсальность&#34;&gt;Универсальность&lt;/h3&gt;
&lt;p&gt;Документы, написанные с использованием синтаксиса Markdown, представляют собой обычные текстовые файлы TXT. Их можно открыть на любой платформе и в любом редакторе. Этим они выгодно отличаются от файлов, созданных в текстовых процессорах.&lt;/p&gt;
&lt;h3 id=&#34;простота&#34;&gt;Простота&lt;/h3&gt;
&lt;p&gt;Markdown настолько прост, что его за 10 минут смогут освоить даже те, кто до этого не слышал про все эти ваши Latex и HTML. Решётки для подзаголовков, звёздочки для выделения, тире для списков. Проще быть не может.&lt;/p&gt;
&lt;h3 id=&#34;большой-выбор-инструментов&#34;&gt;Большой выбор инструментов&lt;/h3&gt;
&lt;p&gt;Редакторов для работы с документами Markdown очень, очень много. Есть и онлайновые, и мобильные, и настольные инструменты. Есть монструозный Atom, красивые и минималистичные ghostwriter и iA Writer, Vim для гиков и Ulysses для профессиональных писателей.&lt;/p&gt;
&lt;h3 id=&#34;конвертируемость&#34;&gt;Конвертируемость&lt;/h3&gt;
&lt;p&gt;Документы Markdown легко экспортировать в любые форматы: PDF, DOC, ODT. При этом их форматирование остаётся неизменным.&lt;/p&gt;
&lt;h2 id=&#34;недостатки-markdown&#34;&gt;Недостатки Markdown&lt;/h2&gt;
&lt;h3 id=&#34;ограниченность-форматирования&#34;&gt;Ограниченность форматирования&lt;/h3&gt;
&lt;p&gt;Так как документы Markdown представляют собой просто текстовые файлы, красивых шрифтов в них не применишь. Всё-таки это скорее инструмент для написания черновиков, чем для полноценной вёрстки.&lt;/p&gt;
&lt;h3 id=&#34;строгие-правила&#34;&gt;Строгие правила&lt;/h3&gt;
&lt;p&gt;В Markdown текст оформляется посредством служебных символов. Один лишний знак * или #, и форматирование изменится. Так что при наборе текстов в Markdown придётся быть внимательным.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями. Git</title>
      <link>https://example.com/post/git/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/git/</guid>
      <description>&lt;p&gt;Git — это система для управления версиями исходного кода программ. В статье мы познакомимся с её основными возможностями, покажем отличие от GitHub и объясним, зачем Git новичку. Ещё вы узнаете, с чего начать обучение и почему не стоит тратить время на альтернативные программы.&lt;/p&gt;
&lt;h2 id=&#34;git--это-комплекс-связанных-веток&#34;&gt;Git — это комплекс связанных веток&lt;/h2&gt;
&lt;p&gt;Коммиты располагаются на master-ветке — основной версии проекта, которая после завершения работы превратится в продукт.&lt;/p&gt;
&lt;p&gt;Система контроля версий позволяет создавать ответвления от master-ветки и экспериментировать с проектом, не мешая другим участника команды.&lt;/p&gt;
&lt;p&gt;Возьмём предыдущую схему, где мы обнаружили ошибку и откатились на один коммит назад. Чтобы поправить код, создадим несколько дополнительных веток и в каждой протестируем разные варианты решения проблемы. Когда решение найдено, ветку с правильным кодом переносим в master-ветку и сохраняем коммит. Лишние ветки оставляем или удаляем, поскольку они не влияют на проект и скрыты от других разработчиков — это ваш личный черновик.&lt;/p&gt;
&lt;h2 id=&#34;git--это-инструмент-совместного-создания-кода&#34;&gt;Git — это инструмент совместного создания кода&lt;/h2&gt;
&lt;p&gt;Часто бывает так: разработчики отделяются от master-ветки и работают над частью проекта самостоятельно — например, чтобы протестировать дополнительные функции. Но не могут продолжить, пока кто-то из команды не допишет код.&lt;/p&gt;
&lt;p&gt;Система контроля версий позволяет не ждать обновления master-ветки и разрешает всем участникам команды свободно перемещаться между ветками других разработчиков для копирования нужных фрагментов кода.&lt;/p&gt;
&lt;p&gt;Бывают и обратные ситуации, когда несколько разработчиков одновременно дописывают код, заливают его в master-ветку и сталкиваются с конфликтом — один файл получает несколько несогласованных изменений. В этом случае Git попробует автоматически исправить ошибки. Если не получится, разработчики это увидят и смогут поправить код вручную.&lt;/p&gt;
&lt;h2 id=&#34;git--это-распределённая-система-версий&#34;&gt;Git — это распределённая система версий&lt;/h2&gt;
&lt;p&gt;Системы контроля версий бывают локальными, централизованными или распределёнными.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Локальная система хранит файлы на одном устройстве, централизованная использует общий сервер, а распределённая — общее облачное хранилище и локальные устройства участников команды. В локальной системе удобно работать с большими проектами, но сложно взаимодействовать с удалённой командой.&lt;/li&gt;
&lt;li&gt;В централизованной системе налажена удалённая работа, но всё привязано к одному серверу. Любой сбой или взлом может повредить файлы проекта.&lt;/li&gt;
&lt;li&gt;В распределённой системе налажена удалённая работа. Если с файлами основного репозитория что-то случится — проект легко восстановить из копии любого участника команды.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Из-за удобства и гибкости распределённая система версий Git считается современным форматом. Это стандарт для большинства ИТ-команд.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
